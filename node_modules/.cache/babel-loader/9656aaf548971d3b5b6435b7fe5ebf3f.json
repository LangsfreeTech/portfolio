{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Satyam\\\\Desktop\\\\langs\\\\LangsFree-project\\\\langsfree\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../Form.css';\nimport axios from 'axios';\nconst restUrl = \"http://localhost/moglie-api/\";\n\nconst Login = () => {\n  _s();\n\n  const [home, setHome] = useState({\n    isLoginOpen: false\n  });\n  const [error, setError] = useState({\n    error: []\n  });\n  const [users, setUsers] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const showValidationErr = (elm, msg) => {\n    setError(prevState => ({\n      error: [...prevState.error, {\n        elm,\n        msg\n      }]\n    }));\n  };\n\n  const onEmailChange = e => {\n    setUsers({ ...users,\n      email: e.target.value\n    }); // clearValidationErr(\"email\");\n  };\n\n  const onPasswordChange = e => {\n    setUsers({ ...users,\n      password: e.target.value\n    }); // clearValidationErr(\"password\");\n  };\n\n  const submitLogin = async e => {\n    if (users.email === \"\") {\n      showValidationErr(\"email\", \"Email cannot be empty\");\n    }\n\n    if (users.password === \"\") {\n      showValidationErr(\"password\", \"Password cannot be empty\");\n    }\n\n    if (users.email !== \"\" && users.password !== \"\") {\n      var postData = {\n        \"name\": \"generateToken\",\n        \"param\": {\n          \"email\": users.email,\n          \"pass\": users.password\n        }\n      };\n      let axiosConfig = {\n        headers: {\n          'Content-Type': 'application/json',\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      };\n      await axios.post(restUrl, postData, axiosConfig).then(response => setUsers(response.data));\n      await axios.post(restUrl, postData, axiosConfig).then(response => // console.log(response.data.success.token) \n      localStorage.setItem(\"auth\", JSON.stringify(response.data.success.token)));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inner-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          className: \"login-input\",\n          placeholder: \"Username\",\n          onChange: onEmailChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          className: \"login-input\",\n          placeholder: \"Password\",\n          onChange: onPasswordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"login-btn\",\n        onClick: submitLogin,\n        children: \" Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"danger-error\",\n        children: home.isLoginOpen && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"danger-error\",\n      children: \"Forget Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"kGZPQ7uc5PmZzxhr90D6LWQDdSA=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Satyam/Desktop/langs/LangsFree-project/langsfree/src/components/Login.js"],"names":["React","useState","axios","restUrl","Login","home","setHome","isLoginOpen","error","setError","users","setUsers","email","password","showValidationErr","elm","msg","prevState","onEmailChange","e","target","value","onPasswordChange","submitLogin","postData","axiosConfig","headers","post","then","response","data","localStorage","setItem","JSON","stringify","success","token"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport '../Form.css';\r\nimport axios from 'axios';\r\n\r\n\r\nconst restUrl = \"http://localhost/moglie-api/\";\r\n\r\nconst Login = () => {\r\n    const [home, setHome] = useState({ isLoginOpen: false });\r\n    const [error, setError] = useState({ error: [] });\r\n    const [users, setUsers] = useState({ email: \"\", password: \"\" })\r\n\r\n    const showValidationErr = (elm, msg) => {\r\n        setError((prevState) => ({ error: [...prevState.error, { elm, msg }] }))\r\n    }\r\n\r\n    const onEmailChange = (e) => {\r\n        setUsers({ ...users, email: e.target.value })\r\n        // clearValidationErr(\"email\");\r\n    }\r\n    const onPasswordChange = (e) => {\r\n        setUsers({ ...users, password: e.target.value })\r\n        // clearValidationErr(\"password\");\r\n    }\r\n\r\n    const submitLogin = async (e) => {\r\n        if (users.email === \"\") {\r\n            showValidationErr(\"email\", \"Email cannot be empty\")\r\n        } if (users.password === \"\") {\r\n            showValidationErr(\"password\", \"Password cannot be empty\")\r\n        }\r\n\r\n        if (users.email !== \"\" && users.password !== \"\") {\r\n\r\n            var postData = {\r\n                \"name\": \"generateToken\",\r\n                \"param\": {\r\n                    \"email\": users.email,\r\n                    \"pass\": users.password\r\n                }\r\n            };\r\n\r\n            let axiosConfig = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                }\r\n            };\r\n            await axios.post(restUrl, postData, axiosConfig)\r\n                .then(response => setUsers(response.data))\r\n\r\n            await axios.post(restUrl, postData, axiosConfig)\r\n                .then(response =>\r\n                    // console.log(response.data.success.token) \r\n                    localStorage.setItem(\"auth\", JSON.stringify(response.data.success.token))\r\n                )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"inner-container\">\r\n            <div className=\"header\">\r\n                Login\r\n            </div>\r\n            <div className=\"box\">\r\n\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        className=\"login-input\"\r\n                        placeholder=\"Username\"\r\n                        onChange={onEmailChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        className=\"login-input\"\r\n                        placeholder=\"Password\"\r\n                        onChange={onPasswordChange} \r\n                    />\r\n                </div>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"login-btn\"\r\n                    onClick={submitLogin\r\n                    }> Login\r\n                </button>\r\n                <small className=\"danger-error\">{home.isLoginOpen && <p>login</p>}</small>\r\n\r\n\r\n            </div>\r\n            <small className=\"danger-error\">Forget Password</small>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}